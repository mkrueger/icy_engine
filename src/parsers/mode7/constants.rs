lazy_static::lazy_static! {
    pub(super) static ref UNICODE_TO_VIEWDATA: std::collections::HashMap<char,char> = {
        let mut res = std::collections::HashMap::new();
        (0..=255).for_each(|a: u8| {
            res.insert(VIEWDATA_TO_UNICODE[a as usize], a as char);
        });
        res
    };
}

pub(super) const VIEWDATA_TO_UNICODE: [char; 256] = [
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    ' ',
    '!',
    '"',
    'f',
    '$',
    '%',
    '&',
    '\'',
    '(',
    ')',
    '*',
    '+',
    ',',
    '-',
    '.',
    '/',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    ':',
    ';',
    '<',
    '=',
    '>',
    '?',
    '@',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    '←',
    '½',
    '→',
    '↑',
    '#',
    '\u{23AF}',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    '¼',
    '⏸',
    '¾',
    '÷',
    '▉',
    // graphics char sextants
    ' ',
    '\u{1fb00}',
    '\u{1fb01}',
    '\u{1fb02}',
    '\u{1fb03}',
    '\u{1fb04}',
    '\u{1fb05}',
    '\u{1fb06}',
    '\u{1fb07}',
    '\u{1fb08}',
    '\u{1fb09}',
    '\u{1fb0a}',
    '\u{1fb0b}',
    '\u{1fb0c}',
    '\u{1fb0d}',
    '\u{1fb0e}',
    '\u{1fb0f}',
    '\u{1fb10}',
    '\u{1fb11}',
    '\u{1fb12}',
    '\u{1fb13}',
    '▌',
    '\u{1fb14}',
    '\u{1fb15}',
    '\u{1fb16}',
    '\u{1fb17}',
    '\u{1fb18}',
    '\u{1fb19}',
    '\u{1fb1a}',
    '\u{1fb1b}',
    '\u{1fb1c}',
    '\u{1fb1d}',
    '\u{1fb1e}',
    '\u{1fb1f}',
    '\u{1fb20}',
    '\u{1fb21}',
    '\u{1fb22}',
    '\u{1fb23}',
    '\u{1fb24}',
    '\u{1fb25}',
    '\u{1fb26}',
    '\u{1fb27}',
    '▐',
    '\u{1fb28}',
    '\u{1fb29}',
    '\u{1fb2a}',
    '\u{1fb2b}',
    '\u{1fb2c}',
    '\u{1fb2d}',
    '\u{1fb2e}',
    '\u{1fb2f}',
    '\u{1fb30}',
    '\u{1fb31}',
    '\u{1fb32}',
    '\u{1fb33}',
    '\u{1fb34}',
    '\u{1fb35}',
    '\u{1fb36}',
    '\u{1fb37}',
    '\u{1fb38}',
    '\u{1fb39}',
    '\u{1fb3a}',
    '\u{1fb3b}',
    '█',
    // no sextants for this variant :/
    ' ',
    '\u{1fb00}',
    '\u{1fb01}',
    '\u{1fb02}',
    '\u{1fb03}',
    '\u{1fb04}',
    '\u{1fb05}',
    '\u{1fb06}',
    '\u{1fb07}',
    '\u{1fb08}',
    '\u{1fb09}',
    '\u{1fb0a}',
    '\u{1fb0b}',
    '\u{1fb0c}',
    '\u{1fb0d}',
    '\u{1fb0e}',
    '\u{1fb0f}',
    '\u{1fb10}',
    '\u{1fb11}',
    '\u{1fb12}',
    '\u{1fb13}',
    '▌',
    '\u{1fb14}',
    '\u{1fb15}',
    '\u{1fb16}',
    '\u{1fb17}',
    '\u{1fb18}',
    '\u{1fb19}',
    '\u{1fb1a}',
    '\u{1fb1b}',
    '\u{1fb1c}',
    '\u{1fb1d}',
    '\u{1fb1e}',
    '\u{1fb1f}',
    '\u{1fb20}',
    '\u{1fb21}',
    '\u{1fb22}',
    '\u{1fb23}',
    '\u{1fb24}',
    '\u{1fb25}',
    '\u{1fb26}',
    '\u{1fb27}',
    '▐',
    '\u{1fb28}',
    '\u{1fb29}',
    '\u{1fb2a}',
    '\u{1fb2b}',
    '\u{1fb2c}',
    '\u{1fb2d}',
    '\u{1fb2e}',
    '\u{1fb2f}',
    '\u{1fb30}',
    '\u{1fb31}',
    '\u{1fb32}',
    '\u{1fb33}',
    '\u{1fb34}',
    '\u{1fb35}',
    '\u{1fb36}',
    '\u{1fb37}',
    '\u{1fb38}',
    '\u{1fb39}',
    '\u{1fb3a}',
    '\u{1fb3b}',
    '█',
];
